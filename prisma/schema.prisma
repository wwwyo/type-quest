// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           Int           @id @default(autoincrement())
  username     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  submissions  Submission[]
  qiitaAccount QiitaAccount?
}

model QiitaAccount {
  id        Int      @id @default(autoincrement())
  userId    Int
  qiitaId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId])
  @@index([userId])
}

model Match {
  id             Int             @id @default(autoincrement())
  status         MatchStatus
  playerOneId    Int
  playerTwoId    Int
  winnerId       Int?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  matchQuestions MatchQuestion[]

  @@index([winnerId])
}

enum MatchStatus {
  PLAYING
  FINISHED
}

model MatchQuestion {
  id          Int          @id @default(autoincrement())
  matchId     Int
  questionId  Int
  createdAt   DateTime     @default(now())
  match       Match        @relation(fields: [matchId], references: [id])
  question    Question     @relation(fields: [questionId], references: [id])
  submissions Submission[]

  @@index([matchId, questionId])
}

model Submission {
  id              Int           @id @default(autoincrement())
  matchQuestionId Int
  userId          Int
  answer          String
  isCorrect       Boolean
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  matchQuestion   MatchQuestion @relation(fields: [matchQuestionId], references: [id])
  user            User          @relation(fields: [userId], references: [id])

  @@index([userId, matchQuestionId])
}

model Question {
  id             Int             @id @default(autoincrement())
  content        String
  testCode       String
  hint           String
  difficulty     Difficulty
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  matchQuestions MatchQuestion[]
}

enum Difficulty {
  EASY
  NORMAL
  HARD
}
